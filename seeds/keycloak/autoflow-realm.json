{
  "id": "5986f2d3-71d9-4767-8edd-8aef987725ea",
  "realm": "autoflow",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "0b0264cc-82d8-4930-8853-ce1740ffee2b",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "5986f2d3-71d9-4767-8edd-8aef987725ea",
        "attributes": {}
      },
      {
        "id": "9bb1b52e-5b83-45c9-abe5-c04e91c61edc",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "5986f2d3-71d9-4767-8edd-8aef987725ea",
        "attributes": {}
      },
      {
        "id": "18ed40cc-03fa-4d7c-805e-b0a74cf6845c",
        "name": "default-roles-autoflow",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": ["offline_access", "uma_authorization"],
          "client": {
            "account": ["view-profile", "manage-account"]
          }
        },
        "clientRole": false,
        "containerId": "5986f2d3-71d9-4767-8edd-8aef987725ea",
        "attributes": {}
      }
    ],
    "client": {
      "realm-management": [
        {
          "id": "822461d1-d420-43cc-b261-cab2b8528dc0",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "863df9ea-1b89-45b3-832f-d8b1ee11101a",
          "attributes": {}
        },
        {
          "id": "e27388c2-fee1-494b-bebd-41b06b0c5047",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "863df9ea-1b89-45b3-832f-d8b1ee11101a",
          "attributes": {}
        },
        {
          "id": "adcd8192-a919-4529-bc67-703aa3234fa2",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "863df9ea-1b89-45b3-832f-d8b1ee11101a",
          "attributes": {}
        },
        {
          "id": "c202934f-15ad-4de9-8f7b-b7db1643dfa0",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "863df9ea-1b89-45b3-832f-d8b1ee11101a",
          "attributes": {}
        },
        {
          "id": "95e655f2-d105-437f-badb-a5e37bd346b6",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": ["query-groups", "query-users"]
            }
          },
          "clientRole": true,
          "containerId": "863df9ea-1b89-45b3-832f-d8b1ee11101a",
          "attributes": {}
        },
        {
          "id": "86883d6a-a2ac-4f44-ba9f-e927884946df",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "863df9ea-1b89-45b3-832f-d8b1ee11101a",
          "attributes": {}
        },
        {
          "id": "befba033-0e61-42e2-9f7e-395a64f14f25",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "863df9ea-1b89-45b3-832f-d8b1ee11101a",
          "attributes": {}
        },
        {
          "id": "878c8a43-6f47-45f3-bc0c-60be28aa5161",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "863df9ea-1b89-45b3-832f-d8b1ee11101a",
          "attributes": {}
        },
        {
          "id": "b3ad6926-dd52-4972-8733-c71da970f60e",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "863df9ea-1b89-45b3-832f-d8b1ee11101a",
          "attributes": {}
        },
        {
          "id": "81e2f4fc-4005-498a-91ae-7030ece47dc0",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "863df9ea-1b89-45b3-832f-d8b1ee11101a",
          "attributes": {}
        },
        {
          "id": "7e6345b1-6b88-4c4b-82c0-88233b9f4300",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "863df9ea-1b89-45b3-832f-d8b1ee11101a",
          "attributes": {}
        },
        {
          "id": "203067ee-57e2-472f-88ea-732397fca590",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "863df9ea-1b89-45b3-832f-d8b1ee11101a",
          "attributes": {}
        },
        {
          "id": "bae65566-a994-4293-8bca-354069fed428",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": ["query-clients"]
            }
          },
          "clientRole": true,
          "containerId": "863df9ea-1b89-45b3-832f-d8b1ee11101a",
          "attributes": {}
        },
        {
          "id": "7195ca9c-f47b-4543-a4f1-9b14e0171abe",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "863df9ea-1b89-45b3-832f-d8b1ee11101a",
          "attributes": {}
        },
        {
          "id": "ecc79562-ed5f-4baa-9659-22e9af475bea",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "manage-identity-providers",
                "query-clients",
                "manage-realm",
                "manage-users",
                "view-users",
                "view-events",
                "view-realm",
                "manage-clients",
                "query-realms",
                "manage-events",
                "impersonation",
                "manage-authorization",
                "view-clients",
                "view-identity-providers",
                "query-groups",
                "create-client",
                "query-users",
                "view-authorization"
              ]
            }
          },
          "clientRole": true,
          "containerId": "863df9ea-1b89-45b3-832f-d8b1ee11101a",
          "attributes": {}
        },
        {
          "id": "494e7ac1-cc5b-41d7-9467-96adbb353572",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "863df9ea-1b89-45b3-832f-d8b1ee11101a",
          "attributes": {}
        },
        {
          "id": "042f7bb9-c4be-4863-9deb-59bea1109977",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "863df9ea-1b89-45b3-832f-d8b1ee11101a",
          "attributes": {}
        },
        {
          "id": "493cb35e-005b-440a-8f83-d29b31d28fa4",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "863df9ea-1b89-45b3-832f-d8b1ee11101a",
          "attributes": {}
        },
        {
          "id": "3aa989ad-b136-49a6-929c-22e038c636d9",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "863df9ea-1b89-45b3-832f-d8b1ee11101a",
          "attributes": {}
        }
      ],
      "admin-dashboard": [],
      "security-admin-console": [],
      "admin-cli": [],
      "account-console": [],
      "broker": [
        {
          "id": "ea3c6ef7-541b-4108-b670-54ad3c549f10",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "544ab331-aa02-4fe7-8091-33bd108ed39c",
          "attributes": {}
        }
      ],
      "account": [
        {
          "id": "34a22ea9-20f5-4393-9f6a-8296d2f0b828",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "7e53e6e7-2b6e-4619-a38b-fc29095bf8d2",
          "attributes": {}
        },
        {
          "id": "d88829cb-0d46-4723-a25b-b69496cb6a0a",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "7e53e6e7-2b6e-4619-a38b-fc29095bf8d2",
          "attributes": {}
        },
        {
          "id": "1db74d9d-34c3-4c6c-800e-ad6d96977f95",
          "name": "view-groups",
          "description": "${role_view-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "7e53e6e7-2b6e-4619-a38b-fc29095bf8d2",
          "attributes": {}
        },
        {
          "id": "6bb9eec7-881b-4304-b0ba-cb12c17afab6",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "7e53e6e7-2b6e-4619-a38b-fc29095bf8d2",
          "attributes": {}
        },
        {
          "id": "285adde6-74c8-415f-9c38-c94638f5f412",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": ["view-consent"]
            }
          },
          "clientRole": true,
          "containerId": "7e53e6e7-2b6e-4619-a38b-fc29095bf8d2",
          "attributes": {}
        },
        {
          "id": "519ad287-1c8a-4696-9bef-67e848909a3f",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "7e53e6e7-2b6e-4619-a38b-fc29095bf8d2",
          "attributes": {}
        },
        {
          "id": "28c87119-cea3-453d-a13f-7b160df9cab1",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": ["manage-account-links"]
            }
          },
          "clientRole": true,
          "containerId": "7e53e6e7-2b6e-4619-a38b-fc29095bf8d2",
          "attributes": {}
        },
        {
          "id": "f7990901-fe7e-4a64-9dcf-cc9d642ab0a5",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "7e53e6e7-2b6e-4619-a38b-fc29095bf8d2",
          "attributes": {}
        }
      ],
      "keycloak-app": []
    }
  },
  "groups": [],
  "defaultRole": {
    "id": "18ed40cc-03fa-4d7c-805e-b0a74cf6845c",
    "name": "default-roles-autoflow",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "5986f2d3-71d9-4767-8edd-8aef987725ea"
  },
  "requiredCredentials": ["password"],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyCodeReusable": false,
  "otpSupportedApplications": ["totpAppGoogleName", "totpAppFreeOTPName"],
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": ["ES256"],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": ["ES256"],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "users": [
    {
      "id": "ff61621e-88a7-4aa2-9313-cd0004c05845",
      "createdTimestamp": 1667656930407,
      "username": "gabriel.majeri",
      "enabled": true,
      "totp": false,
      "emailVerified": true,
      "firstName": "Gabriel",
      "lastName": "Majeri",
      "email": "gabriel.majeri6@gmail.com",
      "credentials": [
        {
          "id": "19b50fad-738a-4d2d-bd43-d01ca63710c6",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1667656946173,
          "secretData": "{\"value\":\"72QBq2GHppM8QkSXx/Pwgg5h51tQzHC1yTxp6TpfwrH5vMptJ7z9mFAJFvERNjTyMbhkhxeNOF/IwljWaW4qsw==\",\"salt\":\"SUBcBgqNTcAsiDYoEPqzEQ==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": ["default-roles-autoflow"],
      "notBefore": 0,
      "groups": []
    }
  ],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": ["offline_access"]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": ["manage-account", "view-groups"]
      }
    ]
  },
  "clients": [
    {
      "id": "7e53e6e7-2b6e-4619-a38b-fc29095bf8d2",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/autoflow/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/realms/autoflow/account/*"],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "bbbbf3ed-2cb9-4b8b-b905-edf803726f28",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/autoflow/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/realms/autoflow/account/*"],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "83eccd21-1916-40b8-a5b6-b32d1914a7a5",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "c83d0ce5-8b50-4aa5-89a0-a06dda2e00aa",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "fe391c43-fe6c-4eaa-ad8d-b3214efa0308",
      "clientId": "admin-dashboard",
      "name": "Admin dashboard",
      "description": "",
      "rootUrl": "http://localhost:3000",
      "adminUrl": "",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "oidc.ciba.grant.enabled": "false",
        "backchannel.logout.session.required": "true",
        "post.logout.redirect.uris": "+",
        "display.on.consent.screen": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "544ab331-aa02-4fe7-8091-33bd108ed39c",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "253270c1-c5fd-45f6-90a5-ca65048a9087",
      "clientId": "keycloak-app",
      "name": "Keycloak App",
      "description": "",
      "rootUrl": "",
      "adminUrl": "",
      "baseUrl": "https://www.keycloak.org/app/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["https://www.keycloak.org/app/*"],
      "webOrigins": ["https://www.keycloak.org/"],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "oidc.ciba.grant.enabled": "false",
        "display.on.consent.screen": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.session.required": "true",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "863df9ea-1b89-45b3-832f-d8b1ee11101a",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "da18c217-8310-44d4-baae-2aca2ce9d0fd",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/autoflow/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/admin/autoflow/console/*"],
      "webOrigins": ["+"],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "9edc8519-aa4c-4974-80c1-00473ee583d6",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "id": "a038df60-6dc8-4f70-bf23-650e0af5be8f",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${profileScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "708eef44-7845-4629-b8b8-b50807d432c6",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "06e4cab2-f787-44b8-b344-f61e9ab0e97c",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "long"
          }
        },
        {
          "id": "0bdce7e8-86eb-4a5d-8b0f-b8595eb65ab1",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "52896330-3ef6-46d2-b94a-d56c14cdf1c4",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "84a35d1e-fab9-48bb-ae9a-15a3e2590a18",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "ea75c09e-62c6-4977-ba07-869031efd4ec",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "d13955b8-ac91-4a21-b571-0513bfd0cbfe",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "57a1d9e5-1b5f-43dd-839e-7b6ea9451996",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "07b38664-90cf-44f1-950e-6f9f2e6ed6c0",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "57ffec49-74ba-4d59-9a76-efcaa7fbf607",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "3301d1e5-b7a5-4ce2-9fc5-8abae05aa2c7",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "0784f514-9084-4fdf-a932-fbc8021130ca",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "62201889-66e1-40ce-b248-643175b5c540",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "236fc1ab-ed69-4188-bcc0-ea1ef5519f4b",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "c49a1539-4d19-4c8d-a726-dd07af3a4be2",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "5a74552f-6406-4217-b63e-b6df4853f372",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "000cccbf-71b7-480e-a2dd-eec5fc26b36e",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${addressScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "0213548b-cc08-415c-944a-4670f28e56cb",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "f8b8f126-afb8-43f9-a9e7-f6e02122c4c5",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${phoneScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "99d186e4-69f7-4e06-9004-3cea96de169e",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "cbf0af8f-fd9f-4e4b-8f10-7439337b823d",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "62703d42-3cda-41d1-983d-0c6b20a69cdb",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${rolesScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "4d32a203-e43f-4cb0-a777-56b97c48754b",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "441df0d4-1ba3-4344-92e4-7aeaedfc71f3",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        },
        {
          "id": "93479480-8355-4dd8-ad13-f65ece4d21b2",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        }
      ]
    },
    {
      "id": "f7327669-ec30-43cf-8cbd-6736977f76e0",
      "name": "acr",
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "b9000aa3-39e2-407f-9c97-3f6c2ff9f957",
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "ad49a110-1f17-481e-895f-9c8762efc48c",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false",
        "consent.screen.text": ""
      },
      "protocolMappers": [
        {
          "id": "fbd438d8-3be1-4f35-a165-f867e5a1b710",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "1525775e-035e-4040-bab2-34e7c58b7901",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${emailScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "35586b75-a14a-4f07-9d11-be2983ee5cac",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "id": "50a92730-61c1-42a9-a0c1-6e929ce93848",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "b05c3956-afc8-42ad-8616-4d154feb261f",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "21f9a9bd-8591-4a77-9d90-2c289bbb11f4",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        },
        {
          "id": "9a0a23fe-ea0b-4fe0-b69c-42c2e5c2fd3e",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "05d07b24-4cbe-4bf4-b59b-59a97c29bd24",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    }
  ],
  "defaultDefaultClientScopes": [
    "role_list",
    "profile",
    "email",
    "roles",
    "web-origins",
    "acr"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "eventsEnabled": false,
  "eventsListeners": ["jboss-logging"],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "c5b3b6a4-885f-47f4-84f9-64c1b1f14a94",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": ["true"],
          "client-uris-must-match": ["true"]
        }
      },
      {
        "id": "b2419826-a476-4f91-886b-d22228d328da",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-user-attribute-mapper",
            "saml-role-list-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-address-mapper",
            "oidc-full-name-mapper",
            "saml-user-property-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-usermodel-attribute-mapper"
          ]
        }
      },
      {
        "id": "bbec1d56-8b40-4d38-9d9f-2e6b909182ef",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": ["true"]
        }
      },
      {
        "id": "14562783-0d03-4e79-8181-021db21247cb",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": ["200"]
        }
      },
      {
        "id": "8bd4c7be-9b2a-4976-88f0-f4f1f468693a",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "1e91a4f6-940e-497c-a7f0-7dee6dd050f1",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-user-attribute-mapper",
            "oidc-usermodel-property-mapper",
            "saml-user-property-mapper",
            "oidc-address-mapper",
            "saml-role-list-mapper",
            "oidc-full-name-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-usermodel-attribute-mapper"
          ]
        }
      },
      {
        "id": "c26c021a-058d-4198-8cd2-ed1a0fb58bfb",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": ["true"]
        }
      },
      {
        "id": "5587667b-7e33-44e4-bd2d-d21be99121ab",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "8ed1a515-0777-4cbb-a0a0-9696e3b21f82",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEowIBAAKCAQEAkF35AtuvdI7iUTIj3ExA4w+FSyxE1pa3h+wwx4AqSoPj/fERwrnAICBIucc1TJchzzHnwcS78gaS+7EZgltB6zJ8IFSBJ6VA2VVDk1df+c3YXmsd3vm8bUopO1taK5i2gAtt44oOG5Zey3w4vg8S2k887YvY/YXwNF0bmjs6RkeoF9n2qhuaER6dKXw8Yrh846a/xxjiZozFKgBKEUdgiIVCDGJwae4S9Xm7psGfGDeC/M0IWespmfNEcggODApWOyZV0h0wTdyjSo18MLUEzKq/Rl1m0fVBiOW7r4cCxmOAwfDcxi+mSPrJlAqRkFRr/20iGAJgIz0S6H8v54O9XQIDAQABAoIBABla69ZY66CizLRahEpXeSj36573jDKNH3hHnwyW4babIfKSgZ5L3ea2jNdWGbIVNBquBuh1C1ZXWb7LTLHkobfzcrIB7XofT7ur+jWZSbG3ubnhgcpM3c9rEEFMytIv3NOxzi/Bqjclqon+DAAzaQn/EzIcVvS17qlfte6ZWuOHRD+jNiTM8EHksh/U6sgQ11Il5FjDwDRu64rMecNZVFjgUFQEhGU5N/2+uJ9C0R/qmQtMv+X6qnke1thnf5rGXwmYD1Opge0EwICYyP0QNRdjTRQnLw0rzWmprD5cK0bXFRnjt3rco4Vq2QK8WFh/FI7yMyxy3/3CzW9v9kgod/ECgYEAxAUX9vXWyPwZXCBSTQQaVFi3yxJm0sBAt0DVwY3ushel7B94TwNmbyEkaIrUQbSyZNV62a6ybhbqSR/mY2YSOXa7gl8e1NSNH+yXo7MaxJkuk5NsjXJKfsRaD39MPMPJgeQttDUks1PYjB8WaCZZ1VZlCi3fi96uTIVDF8YcRs0CgYEAvIq87si2SgyhkbygOiIdJtYA2r8/K41txyKKxkIT+AmaiLMvkaa54LFfB77mWxkpySrSsTUjDGsdCz1wj5pJoUZNhnCwlBOl/GJJDwMqsodyh6qu/SP5rmmT66nibdL/aoILWD0O1Szwf+OVfEKE8ueIyd9+HQJ6hSY5ajbFsNECgYB99MfxaQcbHuMsz5gS5RAGIvv3AVwREHiFSKQSO6GlzoxPrekg3I512lYK1yqNDg+Tu5m1RwxgsVjapCTmui/7vM/Adl7ZY7tLSDwodG4+5i+HpLOcMFSuIH2+d44Ffcl+LaEwqvVqRfZgE5nSUtJmw50pbVC4D97wTLFQFX0WAQKBgCwVGCWQYiagG2qyupe9ACnjYWHD02ZAdAlaRy4hpv+YZzxNAPNCEzW44uoxtTRZhs6VJ5vtO5ucs7a8D8RTo6GEiX3EfVSx315KMKDE8ce6KYoU20MulSM1ZjN0jg91hOiHLVXdOMmY70ZHlNzvxJvyjKX+jkMEIFdfX4847THxAoGBAKte/XOLAa42a21UFZuTHLM0rh6mXgp65NPfugmUC56F7jcntp72oYPHadeNoeT4Xkyex/Z0OLh39oaVUNFTuPgksYt5PGr2LSMPoddrMU8Uh9mZAmtGwqNkNkgZEc9oWa5xLnDi4eK96T3adZ2QRYRkT9m3RH7Ns4tPlyZ2GG/y"
          ],
          "keyUse": ["SIG"],
          "certificate": [
            "MIICnzCCAYcCBgGESBgk6DANBgkqhkiG9w0BAQsFADATMREwDwYDVQQDDAhhdXRvZmxvdzAeFw0yMjExMDUxMzU5MTJaFw0zMjExMDUxNDAwNTJaMBMxETAPBgNVBAMMCGF1dG9mbG93MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAkF35AtuvdI7iUTIj3ExA4w+FSyxE1pa3h+wwx4AqSoPj/fERwrnAICBIucc1TJchzzHnwcS78gaS+7EZgltB6zJ8IFSBJ6VA2VVDk1df+c3YXmsd3vm8bUopO1taK5i2gAtt44oOG5Zey3w4vg8S2k887YvY/YXwNF0bmjs6RkeoF9n2qhuaER6dKXw8Yrh846a/xxjiZozFKgBKEUdgiIVCDGJwae4S9Xm7psGfGDeC/M0IWespmfNEcggODApWOyZV0h0wTdyjSo18MLUEzKq/Rl1m0fVBiOW7r4cCxmOAwfDcxi+mSPrJlAqRkFRr/20iGAJgIz0S6H8v54O9XQIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQBId4mCnl3i+ge/+J60vrHOKtCauMxsev33uVnqhYBXs1LsYX5HMYu3xfmv8S6oxupN6EcFYZk9AzzISygWaHb3LwkgyPreBQo9UsNhKrtU1hvvxNbmXrWqDI9WkSEQL1B0PBTm51KG3oix3fVbB6lnYPnfF3zyluGWMguJqMhc3oeXypI5LGKIWHfugW4/Lk3C2rgeugu/8ptRiVPfaLeYGgEW9BD68bRzkmKtOjcvZJ78B+B168px1Q8gq0DXHjqn3+rFfPfErv31cIU7jEugGM6U7Lmp1sDHQ9MfsbMS+dyDCamzpnUZxmsdXR3iZhHXcTkPK+NPrwwo1laq53U+"
          ],
          "priority": ["100"]
        }
      },
      {
        "id": "b095cb1e-9eae-41ac-8c47-17b12276609a",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "kid": ["9eccb340-9804-4920-a7cf-fbf58da4ea70"],
          "secret": ["OtWC5o-61j_ZswO5yQeqEw"],
          "priority": ["100"]
        }
      },
      {
        "id": "2269c3f1-930e-4437-9170-7e949b48d462",
        "name": "hmac-generated",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "kid": ["cc6e7446-0a81-4c58-93c6-01eed4d261d8"],
          "secret": [
            "S6odgqF3W2YYWe1fM5ADlli7C_qbaM_J20flN2uoay-0ovH3jZ1Edij-FkJgrfaMd10dMTn-NK7EN-megXoEEQ"
          ],
          "priority": ["100"],
          "algorithm": ["HS256"]
        }
      },
      {
        "id": "39955f9f-6b2b-456e-ad3a-564ec1c379cf",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEowIBAAKCAQEAsMoVFSP4Lk7sJ8032OKh/7unK63Zis1rFWNXuxejMwR3ogsr4xi6nkPGmhwBO5KcWGNLewCgiiMOyEQVuv/1oU6qYtSeNZ0zVvdD9dY0bgP5G45UORWfi3wWFb9+XVy/GUuM9sAEjCHnG9FDiDu591upfft8Vvr6nj46Lk54Z5sW0rudBsACT/Vr+aaCe2eLJxukN1rxrFEljnbTYYAbxtIrVvxteHVRqHVEJso0rB3uYDEBy+dD6wJySbKNWy+Uxy72+7yndY+h/I4XWtHMzh6yUX7lXPFOvoTwviG8uyG8qw4NE4fMHPppzq6hHb1hPN98+oSQZKEg452Z94BFCQIDAQABAoIBABSMcJXj9+leCAn6Svb9JKpGZABqNSJyjPNP+DcJYNFBwCwIE2JSkgJqS0/HWIdVm7GUXQYfhQl5WLMDYuk47hKBQ8G4B+mga4K8u9v7uV1ePdqrmPOHpWM/mYuOlgABEz877lcR65VkLWoo0SopEw0CzPkVPZcYlf/FqNqQCWO1S4DmJDsJdj+JAzca5gdTWsMSi6Zo3ZVcZGAZG8n1SZp1JIvGlHMtpTqJaOXtPYNwci/ptJqHYJsJII/CnaM2865205SCz66+w371ryo1kIrstp8ZxxE0sacF+v48mBMiW3GsH3JWDOv/cMFEx7BywYx56HCwjNPOPPBlWd6JrUECgYEA+fZjKbX4fb++u3L4Mu3C8PPaRj8Hp7pwYy7aSu+Kk7TxsOo0c7Oh5K8TgDQPrJ98zccY0NBJNlb3xruzwLP5u2AHIU4Ts4ry9YL+CfJF1pVxYBQPFG27ESHto/x5mch1vYVjFkm70ASwFLOS47TTvhi7UPZWnG4MLq8IFEKRF/kCgYEAtQ88+PbBy4qCLcqlmiLYK0iI8S+s3jozX6uqC/aV/Dk9LrpxOpZ2SZjKjb7vlPLFMzRCxUgspGzqXua6abhp/mPco06j7AzxdKV7E9kBFwWi72iXYe5/Us9vBYCxHan7ipkBE9e+Zh9vunUBZL9RUH6C8iz6gBd7D4XaOPgleZECgYAUCvyikJPPSXu6vhpGwyfZeEQtU8qCWYG/gjdAwPpko6Kpo+32xRWbJ6qxofsLxXIVcfx8aeck805E4jIkponEy4tm0ULlJ6QZqZpDI+kTrsH7iUA4TCAu3ICYoJsDiL5gJvzuAZWMtYOE9W020v4ThRooAMirHGvfpmtIbJoDyQKBgCuq1yu8Z5TtfOQKYdJA4R3fSpfQxcJ7CvTh9Asal6XTMDxa3wAgVbr+TKvPBv1HZ+QnkIsAEzQ8yHHG9+KThYzDDO2eA87keD+HwZ1R0v94bomLEieeW7rfKImNNipPWslciXP9rn/2yP2RRprDwZrGSFKcInZOM3HU+IKQ5ojhAoGBANika3Isz4D7yj7WcbQYb+TxbpTsqQQ56mR6/Q7J/pE4WcNfA2ht39I3tEoFMeUInPal4qYdILsQZQB9hrWI+HRK/IvfwG7AFKGhpzLOuAiOAyc4gj/HghC9bHAVPsxDFOwzSz0fSlFSeXUlJ1a2kd8Nb6YCdSpmZFYqJanJlw24"
          ],
          "keyUse": ["ENC"],
          "certificate": [
            "MIICnzCCAYcCBgGESBgnJjANBgkqhkiG9w0BAQsFADATMREwDwYDVQQDDAhhdXRvZmxvdzAeFw0yMjExMDUxMzU5MTNaFw0zMjExMDUxNDAwNTNaMBMxETAPBgNVBAMMCGF1dG9mbG93MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAsMoVFSP4Lk7sJ8032OKh/7unK63Zis1rFWNXuxejMwR3ogsr4xi6nkPGmhwBO5KcWGNLewCgiiMOyEQVuv/1oU6qYtSeNZ0zVvdD9dY0bgP5G45UORWfi3wWFb9+XVy/GUuM9sAEjCHnG9FDiDu591upfft8Vvr6nj46Lk54Z5sW0rudBsACT/Vr+aaCe2eLJxukN1rxrFEljnbTYYAbxtIrVvxteHVRqHVEJso0rB3uYDEBy+dD6wJySbKNWy+Uxy72+7yndY+h/I4XWtHMzh6yUX7lXPFOvoTwviG8uyG8qw4NE4fMHPppzq6hHb1hPN98+oSQZKEg452Z94BFCQIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQBfuj7i10Lw/9VUHcl7me3F6PYisuGewqAxLCviYxWo2ZNaFGnd6SLcADWyLBjvKUC6sNYMqE2K1UEgL4YRus3yqsiYYnhicgFyOiKz+hsoZXyUhdNjTsUZvLTmu+pma5E7LxNYQpXQtSF82/WcnbIPts02XZiyUcF67K18QsjqXJt7u3mjkWpUcQ9qC2HTJ3SDligkjgX1eE2t5RIvXLmG+te8/Y8aIwSVCBwxJJ5L7sWM3Zf+1/CxBecgCrSAumeSDSNQTNJjpv7ahAyxReK0/CNt/x1yNmKes1h83nn7I0ELudSINbwvUcgw7TbRxegV2XAqyxWHS/LLCmtb6boJ"
          ],
          "priority": ["100"],
          "algorithm": ["RSA-OAEP"]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "authenticationFlows": [
    {
      "id": "2ae9707a-fbf9-4d04-8f39-a2a0a14057e6",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "1985a79f-3113-48bf-90be-6853c5298b3c",
      "alias": "Authentication Options",
      "description": "Authentication options.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "basic-auth",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "basic-auth-otp",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "15069bc3-a07c-4690-87e4-43b997e1f7ff",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "1fb89910-e3b0-441c-9a32-3bae97832452",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "a2d1438b-61fb-444a-8fce-9c0981bf6cf9",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "da9873fe-1819-44e7-9142-6814e4d7e489",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "b5a6ed48-9fa8-401c-a410-77a283e6219d",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "d3a97493-388d-4f6d-af7c-9529bf0d9542",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "077cdb52-732e-48b4-8d4b-ea54dc753beb",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "44e064a3-2156-46d4-a660-f3729fefb158",
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "7161cbe6-3979-4cfb-9d81-7f69b482a106",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "a3ca27ca-2708-49f7-b3bc-c641852c8f1f",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "6b0fa6b7-8b07-4173-ab1e-5339add3240d",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "af163d71-3124-461d-8fcd-fb38929bf4c3",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "67eaef73-c7aa-4423-8e5f-a0ea67f68134",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "935cd107-c981-4188-8750-1add70213da6",
      "alias": "http challenge",
      "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "no-cookie-redirect",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Authentication Options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "4d6806fc-d095-4dda-b87c-86b865892d43",
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "bba39124-1174-4b99-9a5b-3854dde067e8",
      "alias": "registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-profile-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "a8b4304f-a346-4918-9e15-49dab4248205",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "3d8d45e0-9ca9-4609-b5e0-5d0a9b0f76dc",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "0b0e4c92-233a-4f03-af3d-39e1bdb2947c",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "a6f95f98-396f-4d8a-8e90-0748bc3ee77d",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "terms_and_conditions",
      "name": "Terms and Conditions",
      "providerId": "terms_and_conditions",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "webauthn-register",
      "name": "Webauthn Register",
      "providerId": "webauthn-register",
      "enabled": true,
      "defaultAction": false,
      "priority": 70,
      "config": {}
    },
    {
      "alias": "webauthn-register-passwordless",
      "name": "Webauthn Register Passwordless",
      "providerId": "webauthn-register-passwordless",
      "enabled": true,
      "defaultAction": false,
      "priority": 80,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaAuthRequestedUserHint": "login_hint",
    "oauth2DeviceCodeLifespan": "600",
    "clientOfflineSessionMaxLifespan": "0",
    "oauth2DevicePollingInterval": "5",
    "clientSessionIdleTimeout": "0",
    "parRequestUriLifespan": "60",
    "clientSessionMaxLifespan": "0",
    "clientOfflineSessionIdleTimeout": "0",
    "cibaInterval": "5",
    "realmReusableOtpCode": "false"
  },
  "keycloakVersion": "20.0.0",
  "userManagedAccessAllowed": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}
